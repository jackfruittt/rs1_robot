<?xml version="1.0" ?>
<robot name="sjtu_drone" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <!-- Dynamic parameters passed from launch file -->
  <xacro:arg name="drone_name" default="drone_1"/>
  <xacro:arg name="drone_namespace" default="drone_1"/>
  
  <!-- Properties from arguments -->
  <xacro:property name="drone_name" value="$(arg drone_name)"/>
  <xacro:property name="namespace" value="$(arg drone_namespace)"/>
  
  <xacro:property name="M_PI" value="3.14159265359" />

  <link name="base_footprint"/>
  <joint name="base_footprint_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="base_footprint"/>
    <child link="base_link"/>
  </joint>

  <link name="base_link">
    <inertial>
      <mass value="1.477"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.1152" ixy="0" ixz="0" iyy="0.1152" iyz="0" izz="0.218"/>
    </inertial>
    <collision name="sjtu_drone_collision">
      <origin rpy="0 0 0" xyz="0   0   0.04"/>
      <geometry>
        <mesh filename="file://$(find rs1_robot)/models/quadrotor_4.stl"/>
      </geometry>
    </collision>
    <visual name="sjtu_drone_visual">
      <origin rpy="0 0 0" xyz="0   0   0.04"/>
      <geometry>
        <mesh filename="file://$(find rs1_robot)/models/quadrotor_4.dae"/>
      </geometry>
    </visual>
  </link>

  <!-- Sensor links -->
  <joint name="sonar_joint" type="fixed">
    <parent link="base_link" />
    <child link="sonar_link" />
    <origin rpy="0 ${M_PI/2} 0" xyz="0 0 0"/>
  </joint>
  <link name="sonar_link"/>

  <joint name="down_sonar_joint" type="fixed">
    <parent link="base_link" />
    <child link="down_sonar_link" />
    <origin rpy="0 ${M_PI/2} 0" xyz="0 0 -0.1"/>
  </joint>
  <link name="down_sonar_link"/>

  <joint name="lidar_joint" type="fixed">
    <parent link="base_link" />
    <child link="lidar_link" />
    <origin rpy="0 0 0" xyz="0 0 0.05"/>
  </joint>
  <link name="lidar_link"/>

  <joint name="front_cam_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.2 0 0"/>
    <parent link="base_link" />
    <child link="front_cam_link" />
  </joint>
  <link name="front_cam_link"/>

  <joint name="bottom_cam_joint" type="fixed">
    <origin rpy="0 ${M_PI/2} 0" xyz="0 0 0"/>
    <parent link="base_link" />
    <child link="bottom_cam_link" />
  </joint>
  <link name="bottom_cam_link"/>

  <!-- GAZEBO PLUGINS -->
  <gazebo>
    <plugin name="ignition::gazebo::systems::VelocityControl" filename="libignition-gazebo6-velocity-control-system.so">
      <linkName>base_link</linkName>
    </plugin>

    <plugin name="ignition::gazebo::systems::OdometryPublisher" filename="libignition-gazebo6-odometry-publisher-system.so">
      <odom_frame>${namespace}/odom</odom_frame>
      <robot_base_frame>${namespace}/base_link</robot_base_frame>
      <odom_publish_frequency>50</odom_publish_frequency>
      <odom_topic>${namespace}/odom</odom_topic>
      <dimensions>3</dimensions> 
    </plugin>

    <!-- REMOVED: Sensors plugin - will be loaded once in world file instead -->
    <!-- 
    <plugin filename="libignition-gazebo6-sensors-system.so" name="ignition::gazebo::systems::Sensors">
    </plugin>
    -->
  </gazebo>

  <!-- IMU with dynamic topic -->
  <gazebo reference="base_link">
    <sensor type="imu" name="imu">
      <always_on>true</always_on>
      <visualize>false</visualize>
      <update_rate>100</update_rate>
      <topic>model/${drone_name}/imu</topic>
      <gz_frame_id>base_link</gz_frame_id>
      <imu>
        <angular_velocity>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
              <bias_mean>0.0000075</bias_mean>
              <bias_stddev>0.0000008</bias_stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
              <bias_mean>0.0000075</bias_mean>
              <bias_stddev>0.0000008</bias_stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
              <bias_mean>0.0000075</bias_mean>
              <bias_stddev>0.0000008</bias_stddev>
            </noise>
          </z>
        </angular_velocity>
        <linear_acceleration>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
              <bias_mean>0.1</bias_mean>
              <bias_stddev>0.001</bias_stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
              <bias_mean>0.1</bias_mean>
              <bias_stddev>0.001</bias_stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
              <bias_mean>0.1</bias_mean>
              <bias_stddev>0.001</bias_stddev>
            </noise>
          </z>
        </linear_acceleration>
      </imu>
      <!-- REMOVED: Individual sensor plugin - sensors loaded globally -->
      <!--
      <plugin filename="libignition-gazebo6-imu-system.so" name="ignition::gazebo::systems::Imu">
      </plugin>
      -->
    </sensor>
  </gazebo>

  <!-- 2D Lidar with dynamic topic -->
  <gazebo reference="lidar_link">
    <sensor name="lidar" type="gpu_ray">
      <always_on>true</always_on>
      <update_rate>20</update_rate>
      <visualize>true</visualize>
      <topic>model/${drone_name}/lidar</topic>
      <gz_frame_id>lidar_link</gz_frame_id>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1.0</resolution>
            <min_angle>-3.14159</min_angle>
            <max_angle>3.14159</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.1</min>
          <max>30</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
    </sensor>
  </gazebo>

  <!-- Down sonar with dynamic topic -->
  <gazebo reference="down_sonar_link">
    <sensor name="down_sonar" type="gpu_ray">
      <always_on>true</always_on>
      <update_rate>50</update_rate>
      <visualize>false</visualize>
      <topic>model/${drone_name}/sonar</topic>
      <gz_frame_id>down_sonar_link</gz_frame_id>
      <ray>
        <scan>
          <horizontal>
            <samples>1</samples>
            <resolution>1.0</resolution>
            <min_angle>0</min_angle>
            <max_angle>0</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.02</min>
          <max>25</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.005</stddev>
        </noise>
      </ray>
    </sensor>
  </gazebo>

  <!-- Front Camera with dynamic topic -->
  <gazebo reference="front_cam_link">
    <sensor name="front_camera" type="camera">
      <always_on>true</always_on>
      <update_rate>60</update_rate>
      <visualize>false</visualize>
      <topic>model/${drone_name}/front_camera</topic>
      <gz_frame_id>front_cam_link</gz_frame_id>
      <camera>
        <horizontal_fov>2.09</horizontal_fov>
        <image>
          <width>640</width>
          <height>360</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </camera>
    </sensor>
  </gazebo>

  <!-- Bottom Camera with dynamic topic -->
  <gazebo reference="bottom_cam_link">
    <sensor name="bottom_camera" type="camera">
      <always_on>true</always_on>
      <update_rate>15</update_rate>
      <visualize>false</visualize>
      <topic>model/${drone_name}/bottom_camera</topic>
      <gz_frame_id>bottom_cam_link</gz_frame_id>
      <camera>
        <horizontal_fov>1.047</horizontal_fov>
        <image>
          <width>640</width>
          <height>360</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </camera>
    </sensor>
  </gazebo>

  <!-- GPS with dynamic topic -->
  <gazebo reference="base_link">
    <sensor name="gps" type="navsat">
      <always_on>true</always_on>
      <update_rate>10</update_rate>
      <topic>model/${drone_name}/gps</topic>
      <gz_frame_id>base_link</gz_frame_id>
      <navsat>
        <position_sensing>
          <horizontal>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1e-2</stddev>
            </noise>
          </horizontal>
          <vertical>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1e-2</stddev>
            </noise>
          </vertical>
        </position_sensing>
        <velocity_sensing>
          <horizontal>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1e-3</stddev>
            </noise>
          </horizontal>
          <vertical>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1e-3</stddev>
            </noise>
          </vertical>
        </velocity_sensing>
      </navsat>
      <!-- REMOVED: Individual NavSat plugin -->
      <!--
      <plugin filename="libignition-gazebo6-navsat-system.so" name="ignition::gazebo::systems::NavSat">
      </plugin>
      -->
    </sensor>
  </gazebo>

  <!-- Contact sensor with dynamic topic -->
  <gazebo reference="base_link">
    <sensor name="collision_sensor" type="contact">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <topic>${namespace}/bumper</topic>
      <ignition_frame_id>${namespace}/base_link</ignition_frame_id>
      <contact>
        <collision>sjtu_drone_collision</collision>
      </contact>
    </sensor>
  </gazebo>
</robot>